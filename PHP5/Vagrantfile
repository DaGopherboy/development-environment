# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/wily64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
  config.ssh.forward_x11 =true

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
    config.vm.synced_folder "./", "/home/vagrant/"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1024"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL

        # Make sure system is currently up to date
        sudo apt-get update && apt-get upgrade -y
        sudo apt-get update && apt-get dist-upgrade -y

        # Refresh apt
        sudo apt-get update
        
        # Install PHP and other librarys
        sudo apt-get install -y php5-cli php5-dev php5-fpm php5-curl php5-mcrypt php5-xsl ant git-core tcl8.5 build-essential

        # Install Composer
        curl -sS https://getcomposer.org/installer | php
        chmod +x composer.phar
        mv composer.phar /usr/local/bin/composer

        # Install Build Tools for Php
        pear install PHP_CodeSniffer
        wget https://phar.phpunit.de/phpunit.phar
        wget https://phar.phpunit.de/phploc.phar
        wget -c http://static.phpmd.org/php/latest/phpmd.phar
        wget https://phar.phpunit.de/phpcpd.phar
        wget http://phpdox.de/releases/phpdox.phar
        wget http://static.pdepend.org/php/latest/pdepend.phar
        chmod +x phpunit.phar
        chmod +x phploc.phar
        chmod +x phpmd.phar
        chmod +x phpcpd.phar
        chmod +x phpdox.phar
        chmod +x pdepend.phar
        sudo mv phpunit.phar /usr/local/bin/phpunit
        sudo mv phploc.phar /usr/local/bin/phploc
        sudo mv phpmd.phar /usr/local/bin/phpmd
        sudo mv phpcpd.phar /usr/local/bin/phpcpd
        sudo mv phpdox.phar /usr/local/bin/phpdox
        sudo mv pdepend.phar /usr/local/bin/pdepend
        
        # Make sure mcrypt extension is added to mods-available
        cat >> /etc/php5/mods-available/mcrypt.ini <<MCRYPT
        extension=mcrypt.so
MCRYPT

        # Make sure php5-fpm can see mcrypt and symbolic link for php-fpm
        sudo ln -s /usr/sbin/php5-fpm /usr/sbin/php-fpm
        sudo ln -s /etc/php5/mods-available/mcrypt.ini /etc/php5/cli/conf.d/mcrypt.ini
        sudo ln -s /etc/php5/mods-available/mcrypt.ini /etc/php5/fpm/conf.d/mcrypt.ini

   SHELL
   
end